{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/userstudy_t2/components/Video.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from \"lodash\";\nimport styled, { css } from \"styled-components\";\nimport { Rnd } from \"react-rnd\";\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { activityAtom, currentAtom, currentTimeAtom, durationAtom, durationTimeAtom, lockAtom, percentAtom, playingAtom, withVideoAtom } from \"../atom\";\nimport useOnClickOutside from \"../hooks/onClickOutside\";\n\nfunction Video({\n  src,\n  content,\n  videoLocation\n}, ref) {\n  const {\n    0: positionState,\n    1: setPositionState\n  } = useState({\n    width: \"auto\",\n    height: \"auto\",\n    x: 100,\n    y: 100\n  });\n  const [withVideo] = useAtom(withVideoAtom);\n  const [activity, setActivity] = useAtom(activityAtom);\n  const [currentTime, setCurrentTime] = useAtom(currentTimeAtom);\n  const [durationTime, setDurationTime] = useAtom(durationTimeAtom);\n  const [duration, setDuration] = useAtom(durationAtom);\n  const [percent, setPercent] = useAtom(percentAtom);\n  const [current, setCurrent] = useAtom(currentAtom);\n  const {\n    0: fixed,\n    1: setFixed\n  } = useState(false);\n  const {\n    0: viable,\n    1: setViable\n  } = useState(true);\n  const {\n    0: nodeVideoLocation,\n    1: setNodeVideoLocation\n  } = useState();\n  const [lock] = useAtom(lockAtom);\n\n  const setFixedTrue = () => {\n    setFixed(true);\n  };\n\n  const {\n    0: onActive,\n    1: setOnActive\n  } = useState(true);\n  const [play, setPlay] = useAtom(playingAtom);\n  const videoRef = useRef();\n  useOnClickOutside(videoRef, () => setOnActive(false));\n\n  const initialSize = () => {\n    const video = videoRef.current;\n    const time = video.currentTime;\n\n    const vl = _.findLast(videoLocation, obj => obj.start_time < time);\n\n    if (!vl) {\n      return;\n    }\n\n    if (!vl.box_info) {\n      return;\n    }\n\n    const [,, w, h] = vl.box_info;\n    const targetWidth = window.innerWidth * 0.2;\n    const targetHeight = targetWidth / w * h;\n    setPositionState(prev => ({\n      width: `${targetWidth}px`,\n      height: `${targetHeight}px`,\n      x: window.innerWidth - targetWidth,\n      y: window.innerHeight - targetHeight - 70\n    }));\n  };\n\n  useEffect(() => {\n    if (!nodeVideoLocation) {\n      setViable(false);\n      return;\n    } else {\n      setViable(true);\n    }\n\n    if (fixed) {\n      return;\n    }\n\n    initialSize();\n  }, [nodeVideoLocation, fixed]);\n  useImperativeHandle(ref, () => ({\n    initial: () => {\n      initialSize();\n    },\n    move: () => {\n      setTimeout(() => {\n        videoRef.current.play();\n\n        if (!play) {\n          videoRef.current.pause();\n          setPlay(false);\n        }\n      }, 200);\n    },\n    toggle: () => {\n      if (play) {\n        videoRef.current.pause();\n        setPlay(false);\n      } else {\n        videoRef.current.play();\n        setPlay(true);\n      }\n    },\n    jump: percentPoint => {\n      const time = percentPoint * duration;\n      setPercent(percentPoint);\n      videoRef.current.currentTime = time;\n      videoRef.current.play();\n      setTimeout(() => {\n        if (!play) {\n          videoRef.current.pause();\n          setPlay(false);\n        }\n      }, 100);\n\n      const slide = _.findLastIndex(content, obj => obj.start_time < time);\n\n      const action = \"jump\";\n      setActivity({\n        slide,\n        action,\n        time,\n        play\n      });\n    }\n  }), [videoRef.current, play, duration]);\n\n  const onTimeEvent = () => {\n    const video = videoRef.current;\n    const time = video.currentTime;\n\n    const slide = _.findLastIndex(content, obj => obj.start_time < time);\n\n    const vl = _.findLast(videoLocation, obj => obj.start_time < time);\n\n    if (vl && vl.box_info) {\n      setNodeVideoLocation(vl.box_info);\n    } else {\n      setNodeVideoLocation(false);\n    }\n\n    const action = activity.slide === slide ? \"playing\" : \"flip\";\n    setActivity({\n      slide,\n      action,\n      time\n    });\n    const percentPoint = time / video.duration;\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time - 60 * minutes).toString().padStart(2, \"0\");\n    setCurrentTime(`${minutes}:${seconds}`);\n    setPercent(percentPoint * 100);\n  };\n\n  const loaded = e => {\n    const targetDue = e.currentTarget.duration;\n    setDuration(targetDue);\n    const {\n      videoWidth,\n      videoHeight\n    } = e.currentTarget;\n    const targetWidth = window.innerWidth * 0.2;\n    const targetHeight = targetWidth / videoWidth * videoHeight; // setPositionState((prev) => ({ width: `${targetWidth}px`, height: `${targetHeight}px`, x: window.innerWidth - targetWidth, y: window.innerHeight - targetHeight - 50 }));\n\n    const minutes = Math.floor(targetDue / 60);\n    const seconds = Math.floor(targetDue - 60 * minutes).toString().padStart(2, \"0\");\n    setDurationTime(`${minutes}:${seconds}`);\n  };\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = activity.time;\n      videoRef.current.pause();\n      setPlay(false);\n    }\n  }, [videoRef]);\n  return /*#__PURE__*/_jsxDEV(CustomRnd, {\n    visiable: viable,\n    size: {\n      width: positionState.width,\n      height: positionState.height,\n      background: \"red\"\n    },\n    position: {\n      x: positionState.x,\n      y: positionState.y\n    },\n    onDragStart: setFixedTrue,\n    onResizeStart: setFixedTrue,\n    bounds: \".frame\",\n    enableResizing: !lock,\n    disableDragging: lock,\n    onDragStop: (e, d) => {\n      setPositionState(_objectSpread(_objectSpread({}, positionState), {}, {\n        x: d.x,\n        y: d.y\n      }));\n      setOnActive(true);\n    },\n    onResizeStop: (e, direction, ref, delta, position) => {\n      setOnActive(true);\n      setPositionState(_objectSpread({\n        width: ref.style.width,\n        height: ref.style.height\n      }, position));\n    },\n    colored: onActive,\n    children: /*#__PURE__*/_jsxDEV(VideoEl, {\n      src: src,\n      onTimeUpdate: onTimeEvent,\n      ref: videoRef,\n      active: withVideo,\n      playsInline: true,\n      isDrag: true,\n      onLoadedMetadata: loaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\nconst CustomRnd = styled(Rnd).withConfig({\n  displayName: \"Video__CustomRnd\",\n  componentId: \"sc-16yaw0k-0\"\n})([\"box-sizing:border-box;z-index:100;visibility:\", \";\", \"\"], props => props.visiable ? \"visiable\" : \"hidden\", props => props.colored && css([\"z-index:10;outline:1px solid #a9ceeb;box-shadow:0px 1px 2px 2px #a9ceeb;\"]));\nconst VideoEl = styled.video.withConfig({\n  displayName: \"Video__VideoEl\",\n  componentId: \"sc-16yaw0k-1\"\n})([\"margin-left:auto;display:block;opacity:0;height:inherit;max-width:100%;\", \" \", \"\"], props => props.active && css([\"opacity:1;\"]), props => props.isDrag && css([\"height:100%;width:100%;object-fit:fill;\"]));\nexport default /*#__PURE__*/forwardRef(Video);","map":{"version":3,"sources":["/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/userstudy_t2/components/Video.jsx"],"names":["_","styled","css","Rnd","forwardRef","useEffect","useImperativeHandle","useRef","useState","useAtom","activityAtom","currentAtom","currentTimeAtom","durationAtom","durationTimeAtom","lockAtom","percentAtom","playingAtom","withVideoAtom","useOnClickOutside","Video","src","content","videoLocation","ref","positionState","setPositionState","width","height","x","y","withVideo","activity","setActivity","currentTime","setCurrentTime","durationTime","setDurationTime","duration","setDuration","percent","setPercent","current","setCurrent","fixed","setFixed","viable","setViable","nodeVideoLocation","setNodeVideoLocation","lock","setFixedTrue","onActive","setOnActive","play","setPlay","videoRef","initialSize","video","time","vl","findLast","obj","start_time","box_info","w","h","targetWidth","window","innerWidth","targetHeight","prev","innerHeight","initial","move","setTimeout","pause","toggle","jump","percentPoint","slide","findLastIndex","action","onTimeEvent","minutes","Math","floor","seconds","toString","padStart","loaded","e","targetDue","currentTarget","videoWidth","videoHeight","background","d","direction","delta","position","style","CustomRnd","props","visiable","colored","VideoEl","active","isDrag"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport styled, { css } from \"styled-components\";\nimport { Rnd } from \"react-rnd\";\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useAtom } from \"jotai\";\n\nimport { activityAtom, currentAtom, currentTimeAtom, durationAtom, durationTimeAtom, lockAtom, percentAtom, playingAtom, withVideoAtom } from \"../atom\";\nimport useOnClickOutside from \"../hooks/onClickOutside\";\n\nfunction Video({ src, content, videoLocation }, ref) {\n    const [positionState, setPositionState] = useState({\n        width: \"auto\",\n        height: \"auto\",\n        x: 100,\n        y: 100,\n    });\n    const [withVideo] = useAtom(withVideoAtom);\n    const [activity, setActivity] = useAtom(activityAtom);\n    const [currentTime, setCurrentTime] = useAtom(currentTimeAtom);\n    const [durationTime, setDurationTime] = useAtom(durationTimeAtom);\n    const [duration, setDuration] = useAtom(durationAtom);\n    const [percent, setPercent] = useAtom(percentAtom);\n    const [current, setCurrent] = useAtom(currentAtom);\n    const [fixed, setFixed] = useState(false);\n    const [viable, setViable] = useState(true);\n    const [nodeVideoLocation, setNodeVideoLocation] = useState();\n    const [lock] = useAtom(lockAtom);\n    const setFixedTrue = () => {\n        setFixed(true);\n    };\n\n    const [onActive, setOnActive] = useState(true)\n    const [play, setPlay] = useAtom(playingAtom);\n    const videoRef = useRef();\n    useOnClickOutside(videoRef, () => setOnActive(false));\n    const initialSize = () => {\n        const video = videoRef.current;\n        const time = video.currentTime;\n        const vl = _.findLast(videoLocation, (obj) => obj.start_time < time);\n        if (!vl){\n            return\n        }\n        if (!vl.box_info){\n            return\n        }\n        const [, , w, h] = vl.box_info;\n        const targetWidth = window.innerWidth * 0.2;\n        const targetHeight = (targetWidth / w) * h;\n        setPositionState((prev) => ({ width: `${targetWidth}px`, height: `${targetHeight}px`, x: window.innerWidth - targetWidth, y: window.innerHeight - targetHeight - 70 }));\n\n    }\n    useEffect(() => {\n        if (!nodeVideoLocation) {\n            setViable(false);\n            return;\n        } else {\n            setViable(true);\n        }\n        if (fixed) {\n            return;\n        }\n        initialSize()\n    }, [nodeVideoLocation, fixed]);\n    useImperativeHandle(\n        ref,\n        () => ({\n            initial: () => {\n                initialSize()\n            },\n            move: () => {\n                setTimeout(() => {\n                    videoRef.current.play();\n                    if (!play) {\n                        videoRef.current.pause();\n                        setPlay(false);\n                    }\n                }, 200);\n            },\n            toggle: () => {\n                if (play) {\n                    videoRef.current.pause();\n                    setPlay(false);\n                } else {\n                    videoRef.current.play();\n                    setPlay(true);\n                }\n            },\n            jump: (percentPoint) => {\n                const time = percentPoint * duration;\n                setPercent(percentPoint);\n                videoRef.current.currentTime = time;\n                videoRef.current.play();\n                setTimeout(() => {\n                    if (!play) {\n                        videoRef.current.pause();\n                        setPlay(false);\n                    }\n                }, 100);\n                const slide = _.findLastIndex(content, (obj) => obj.start_time < time);\n                const action = \"jump\";\n                setActivity({ slide, action, time, play });\n            },\n        }),\n        [videoRef.current, play, duration]\n    );\n\n    const onTimeEvent = () => {\n        const video = videoRef.current;\n        const time = video.currentTime;\n        const slide = _.findLastIndex(content, (obj) => obj.start_time < time);\n        const vl = _.findLast(videoLocation, (obj) => obj.start_time < time);\n        if (vl && vl.box_info) {\n            setNodeVideoLocation(vl.box_info);\n        } else {\n            setNodeVideoLocation(false);\n        }\n        const action = activity.slide === slide ? \"playing\" : \"flip\";\n        setActivity({ slide, action, time });\n        const percentPoint = time / video.duration;\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time - 60 * minutes)\n            .toString()\n            .padStart(2, \"0\");\n        setCurrentTime(`${minutes}:${seconds}`);\n        setPercent(percentPoint * 100);\n    };\n\n    const loaded = (e) => {\n        const targetDue = e.currentTarget.duration;\n        setDuration(targetDue);\n        const { videoWidth, videoHeight } = e.currentTarget;\n        const targetWidth = window.innerWidth * 0.2;\n        const targetHeight = (targetWidth / videoWidth) * videoHeight;\n        // setPositionState((prev) => ({ width: `${targetWidth}px`, height: `${targetHeight}px`, x: window.innerWidth - targetWidth, y: window.innerHeight - targetHeight - 50 }));\n        const minutes = Math.floor(targetDue / 60);\n        const seconds = Math.floor(targetDue - 60 * minutes)\n            .toString()\n            .padStart(2, \"0\");\n        setDurationTime(`${minutes}:${seconds}`);\n    };\n    useEffect(() => {\n        if (videoRef.current) {\n            videoRef.current.currentTime = activity.time;\n            videoRef.current.pause();\n            setPlay(false);\n        }\n    }, [videoRef]);\n\n    return (\n        <CustomRnd\n            visiable={viable}\n            size={{ width: positionState.width, height: positionState.height, background: \"red\" }}\n            position={{ x: positionState.x, y: positionState.y }}\n            onDragStart={setFixedTrue}\n            onResizeStart={setFixedTrue}\n            bounds={\".frame\"}\n            enableResizing={!lock}\n            disableDragging={lock}\n            onDragStop={(e, d) => {\n                setPositionState({ ...positionState, x: d.x, y: d.y });\n                setOnActive(true)\n            }}\n            onResizeStop={(e, direction, ref, delta, position) => {\n                setOnActive(true)\n                setPositionState({\n                    width: ref.style.width,\n                    height: ref.style.height,\n                    ...position,\n                });\n            }}\n            colored={onActive}\n        >\n            <VideoEl src={src} onTimeUpdate={onTimeEvent} ref={videoRef} active={withVideo} playsInline isDrag={true} onLoadedMetadata={loaded} />\n        </CustomRnd>\n    );\n}\n\nconst CustomRnd = styled(Rnd)`\n    box-sizing: border-box;\n    z-index: 100;\n    visibility: ${(props) => (props.visiable ? \"visiable\" : \"hidden\")};\n    ${(props)=> props.colored&&css`\n        z-index: 10;\n        outline: 1px solid #a9ceeb;\n        box-shadow: 0px 1px 2px 2px #a9ceeb;\n    `\n    }\n`;\n\nconst VideoEl = styled.video`\n    margin-left: auto;\n    display: block;\n    opacity: 0;\n    height: inherit;\n    max-width: 100%;\n    ${(props) =>\n        props.active &&\n        css`\n            opacity: 1;\n        `}\n\n    ${(props) =>\n        props.isDrag &&\n        css`\n            height: 100%;\n            width: 100%;\n            object-fit: fill;\n        `}\n`;\nexport default forwardRef(Video);\n"]},"metadata":{},"sourceType":"module"}