{"ast":null,"code":"import _defineProperty from \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/userstudy_t2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/userstudy_t2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/userstudy_t2/components/InnerVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport _, { set } from \"lodash\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport { useAtom } from \"jotai\";\nimport { activityAtom, playingAtom } from \"../atom\";\nimport { darkModeAtom, lockAtom } from \"../atom\";\n\nfunction InnerVideo(_ref) {\n  _s();\n\n  var url = _ref.url,\n      startTime = _ref.startTime,\n      endTime = _ref.endTime,\n      addFixedData = _ref.addFixedData,\n      index = _ref.index;\n\n  var _useState = useState(),\n      fixed = _useState[0],\n      setFixed = _useState[1];\n\n  var _useState2 = useState(false),\n      onPlay = _useState2[0],\n      setOnPlay = _useState2[1];\n\n  var _useAtom = useAtom(activityAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 1),\n      action = _useAtom2[0];\n\n  var _useAtom3 = useAtom(playingAtom),\n      _useAtom4 = _slicedToArray(_useAtom3, 1),\n      playing = _useAtom4[0];\n\n  var _useAtom5 = useAtom(lockAtom),\n      _useAtom6 = _slicedToArray(_useAtom5, 1),\n      lock = _useAtom6[0];\n\n  var _useAtom7 = useAtom(darkModeAtom),\n      _useAtom8 = _slicedToArray(_useAtom7, 1),\n      dark = _useAtom8[0];\n\n  var ref = useRef(null);\n  useEffect(function () {\n    if (action.time > startTime && playing) {\n      setOnPlay(true);\n    }\n  }, [action.time]);\n  useEffect(function () {\n    if (fixed) {\n      return;\n    }\n\n    if (action.time < startTime) {\n      setOnPlay(false);\n      ref.current.currentTime = 0;\n      return;\n    }\n\n    if (!index == action.slide) {\n      setOnPlay(false);\n      return;\n    }\n\n    if (!playing) {\n      setOnPlay(false);\n    }\n\n    if (action.action === \"jump\") {\n      ref.current.currentTime = action.time - startTime;\n    }\n\n    if (action.action === \"flip\") {\n      ref.current.currentTime = action.time - startTime;\n    }\n\n    if (playing) {\n      setOnPlay(true);\n      return;\n    }\n  }, [action.action, playing, index]);\n  useEffect(function () {\n    if (!ref.current) {\n      return;\n    }\n\n    if (onPlay) {\n      ref.current.play();\n    } else {\n      ref.current.pause();\n    }\n  }, [onPlay]);\n\n  var onClick = function onClick(e) {\n    if (lock) {\n      return;\n    }\n\n    setFixed(true);\n\n    var _e$currentTarget$firs = e.currentTarget.firstChild.getBoundingClientRect(),\n        top = _e$currentTarget$firs.top,\n        right = _e$currentTarget$firs.right,\n        bottom = _e$currentTarget$firs.bottom,\n        left = _e$currentTarget$firs.left,\n        height = _e$currentTarget$firs.height,\n        x = _e$currentTarget$firs.x,\n        y = _e$currentTarget$firs.y;\n\n    var width = window.getComputedStyle(e.currentTarget.firstChild)[\"width\"];\n    addFixedData({\n      label: \"VIDEO\",\n      src: url,\n      startTime: startTime,\n      style: _.pick(window.getComputedStyle(e.currentTarget.firstChild), [\"font-size\", \"padding\", \"color\", \"background-color\"]),\n      top: top,\n      right: right,\n      bottom: bottom,\n      left: left,\n      width: width,\n      height: height,\n      x: x,\n      y: y\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fixed: fixed,\n    onClick: onClick,\n    isDark: dark,\n    children: /*#__PURE__*/_jsxDEV(Video, _defineProperty({\n      src: url,\n      draggable: \"false\",\n      ref: ref,\n      playsInline: true,\n      muted: true\n    }, \"playsInline\", true), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InnerVideo, \"vyqnuEwMbPePEoX3+1kT69d7z6k=\", false, function () {\n  return [useAtom, useAtom, useAtom, useAtom];\n});\n\n_c = InnerVideo;\nvar Container = styled.div.withConfig({\n  displayName: \"InnerVideo__Container\",\n  componentId: \"sc-141hw4x-0\"\n})([\"display:flex;flex:1;flex-basis:0;overflow:hidden;visibility:\", \";background-color:\", \";\"], function (props) {\n  return props.fixed ? \"hidden\" : \"visible\";\n}, function (props) {\n  return props.isDark ? rgb(47, 48, 49) : \"white\";\n});\n_c2 = Container;\nvar Video = styled.video.withConfig({\n  displayName: \"InnerVideo__Video\",\n  componentId: \"sc-141hw4x-1\"\n})([\"display:block;margin:0 auto;max-width:100%;max-height:100%;object-fit:fill;\"]);\n_c3 = Video;\nexport default _c4 = /*#__PURE__*/React.memo(InnerVideo);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InnerVideo\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/jeongyeon/Desktop/lecture_segmentation/web_dev/code/userstudy_t2/components/InnerVideo.jsx"],"names":["styled","_","set","React","useEffect","useRef","useState","Rnd","useAtom","activityAtom","playingAtom","darkModeAtom","lockAtom","InnerVideo","url","startTime","endTime","addFixedData","index","fixed","setFixed","onPlay","setOnPlay","action","playing","lock","dark","ref","time","current","currentTime","slide","play","pause","onClick","e","currentTarget","firstChild","getBoundingClientRect","top","right","bottom","left","height","x","y","width","window","getComputedStyle","label","src","style","pick","Container","div","props","isDark","rgb","Video","video","memo"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport _, { set } from \"lodash\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport { useAtom } from \"jotai\";\n\nimport { activityAtom, playingAtom } from \"../atom\";\nimport { darkModeAtom, lockAtom } from \"../atom\";\n\nfunction InnerVideo({ url, startTime, endTime, addFixedData, index }) {\n    const [fixed, setFixed] = useState();\n    const [onPlay, setOnPlay] = useState(false);\n    const [action] = useAtom(activityAtom);\n    const [playing] = useAtom(playingAtom);\n    const [lock] = useAtom(lockAtom);\n    const [dark] = useAtom(darkModeAtom);\n\n    const ref = useRef(null);\n    useEffect(() => {\n        if (action.time > startTime && playing) {\n            setOnPlay(true);\n        }\n    }, [action.time]);\n    useEffect(() => {\n        if (fixed) {\n            return;\n        }\n        if (action.time < startTime) {\n            setOnPlay(false);\n            ref.current.currentTime = 0;\n            return;\n        }\n        if (!index == action.slide) {\n            setOnPlay(false);\n            return;\n        }\n        if (!playing) {\n            setOnPlay(false);\n        }\n        if (action.action === \"jump\") {\n            ref.current.currentTime = action.time - startTime;\n        }\n\n        if (action.action === \"flip\") {\n            ref.current.currentTime = action.time - startTime;\n        }\n        if (playing) {\n            setOnPlay(true);\n            return;\n        }\n    }, [action.action, playing, index]);\n    useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n        if (onPlay) {\n            ref.current.play();\n        } else {\n            ref.current.pause();\n        }\n    }, [onPlay]);\n    const onClick = (e) => {\n        if (lock) {\n            return;\n        }\n        setFixed(true);\n        const { top, right, bottom, left, height, x, y } = e.currentTarget.firstChild.getBoundingClientRect();\n        const width = window.getComputedStyle(e.currentTarget.firstChild)[\"width\"];\n        addFixedData({\n            label: \"VIDEO\",\n            src: url,\n            startTime: startTime,\n            style: _.pick(window.getComputedStyle(e.currentTarget.firstChild), [\"font-size\", \"padding\", \"color\", \"background-color\"]),\n            top,\n            right,\n            bottom,\n            left,\n            width,\n            height,\n            x,\n            y,\n        });\n    };\n    return (\n        <Container fixed={fixed} onClick={onClick} isDark={dark}>\n            <Video src={url} draggable=\"false\" ref={ref} playsInline muted={true} playsInline />\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    display: flex;\n    flex: 1;\n    flex-basis: 0;\n    overflow: hidden;\n    visibility: ${(props) => (props.fixed ? \"hidden\" : \"visible\")};\n    background-color: ${(props) => (props.isDark ? rgb(47, 48, 49) : \"white\")};\n`;\nconst Video = styled.video`\n    display: block;\n    margin: 0 auto;\n    max-width: 100%;\n    max-height: 100%;\n    object-fit: fill;\n`;\n\nexport default React.memo(InnerVideo);\n"]},"metadata":{},"sourceType":"module"}