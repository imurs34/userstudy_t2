import { QueryKey, QueryObserverOptions } from 'react-query';
import type { WritableAtom, Getter } from 'jotai';
declare type Action = {
    type: 'refetch';
} | {
    type: 'cleanup';
};
declare type AtomQueryOptions<TQueryFnData, TError, TData, TQueryData> = QueryObserverOptions<TQueryFnData, TError, TData, TQueryData> & {
    queryKey: QueryKey;
};
export declare function atomWithQuery<TQueryFnData, TError, TData = TQueryFnData, TQueryData = TQueryFnData>(createQuery: AtomQueryOptions<TQueryFnData, TError, TData, TQueryData> | ((get: Getter) => AtomQueryOptions<TQueryFnData, TError, TData, TQueryData>), equalityFn?: (a: TData, b: TData) => boolean): WritableAtom<TData, Action>;
export {};
