import type { Getter, Setter } from 'jotai';
import type { Scope } from '../core/atom';
declare type Callback<Result, Arg> = undefined extends Arg ? (arg?: Arg) => Promise<Result> : (arg: Arg) => Promise<Result>;
export declare function useAtomCallback<Result, Arg>(callback: (get: Getter, set: Setter, arg: Arg) => Promise<Result>, scope?: Scope): Callback<Result, Arg>;
export declare function useAtomCallback<Result, Arg>(callback: (get: Getter, set: Setter, arg: Arg) => Result, scope?: Scope): Callback<Result, Arg>;
export {};
